<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.serendipity</groupId>
    <artifactId>javabaisc</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <properties>
        <!-- 基础java版本  -->
        <jdk.version>21</jdk.version>
        <maven.compiler.source>21</maven.compiler.source>
        <maven.compiler.target>21</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- 工具包 -->
        <lombok.version>1.18.30</lombok.version>
        <hutool.version>5.8.25</hutool.version>
        <logback.version>1.4.12</logback.version>
        <jsonzou.version>4.3.0</jsonzou.version>
        <guava.version>32.1.3-jre</guava.version>
        <caffeine.version>2.9.3</caffeine.version>
        <common.lang3.version>3.12.0</common.lang3.version>
        <commons.beanutils.version>1.9.4</commons.beanutils.version>
        <reactor.version>3.1.16.RELEASE</reactor.version>
        <!--  Springboot   -->
        <spring.boot.verson>3.4.0</spring.boot.verson>
        <spring.boot.log.version>3.4.0</spring.boot.log.version>
        <!--  测试包  -->
        <junit.version>5.8.1</junit.version>

    </properties>

    <modules>
        <module>basicgrammar</module>
        <module>jvm</module>
        <module>leetcode</module>
        <module>netty</module>
        <module>thread</module>
        <module>effectivejava</module>
        <module>designerPattern</module>
        <module>commonUtils</module>
        <module>newFeature</module>
    </modules>

    <!--
    区别总结:
        dependencyManagement：主要用于集中管理依赖的版本和配置，但不实际引入这些依赖。通常在父POM中使用，以便子模块可以继承这些配置。
        dependencies：用于实际引入项目所需的依赖，将其添加到项目的构建路径中。通常在每个模块的POM文件中使用。
        结合使用:
           在实际项目中，通常会结合使用dependencyManagement和dependencies。父POM中使用dependencyManagement来统一管理依赖版本，
           子模块中使用dependencies来实际引入需要的依赖。
    -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
            </dependency>

            <!-- hutools   -->
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${hutool.version}</version>
            </dependency>

            <!-- 添加Reactor Test依赖，用于响应式编程测试 -->
            <dependency>
                <groupId>io.projectreactor</groupId>
                <artifactId>reactor-test</artifactId>
                <version>${reactor.version}</version>
            </dependency>

            <!--mock数据-->
            <dependency>
                <groupId>com.github.jsonzou</groupId>
                <artifactId>jmockdata</artifactId>
                <version>${jsonzou.version}</version>
            </dependency>

            <!-- 添加Guava依赖，用于Java工具库 -->
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>

            <!-- caffeine -->
            <dependency>
                <groupId>com.github.ben-manes.caffeine</groupId>
                <artifactId>caffeine</artifactId>
                <version>${caffeine.version}</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-lang3 -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${common.lang3.version}</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/commons-beanutils/commons-beanutils -->
            <dependency>
                <groupId>commons-beanutils</groupId>
                <artifactId>commons-beanutils</artifactId>
                <version>${commons.beanutils.version}</version>
            </dependency>

            <!-- junit  -->
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter</artifactId>
                <version>${junit.version}</version>
            </dependency>

            <!-- boot -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot</artifactId>
                <version>${spring.boot.verson}</version>
            </dependency>

            <!-- Spring Boot Starter for Logging -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-logging</artifactId>
                <version>${spring.boot.log.version}</version>
            </dependency>

            <!-- projectlombok -->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

</project>